service: RPC-web-service # NOTE: update this with your service name

provider:
  name: aws
  runtime: python3.6
  stage: dev
  region: eu-west-1
  variableSyntax: '\${{([\s\S]+?)}}'

functions:
  hello:
    handler: handler.hello

plugins:
  - serverless-s3-sync

custom:
  siteName: serverless-iot-device-controller.com
  s3Sync:
    - bucketName: ${self:custom.siteName}
      localDir: static

resources:
 Resources:
  DynamoDBTableRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "dynamodb.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      Policies:
        - 
          PolicyName: "DynamoFullAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action: "dynamodb:*"
                Resource: "*"

      RoleName: DynamoDBTableRole
  
  ConnectedDevicesTable:
    Type: "AWS::DynamoDB::Table"
    DependsOn: ["DynamoDBTableRole"]
    Properties:
      AttributeDefinitions:
        - 
          AttributeName: "ID"
          AttributeType: "S"
      KeySchema:
        - 
          AttributeName: "ID"
          KeyType: "HASH"
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1    
      TableName: "ConnectedDevicesTable"

  DynamoDBTopicRule:
    Type: AWS::IoT::TopicRule
    DependsOn: ["ConnectedDevicesTable"]
    Properties:
      RuleName: DynamoDBTopicRule
      TopicRulePayload:
        RuleDisabled: false
        Sql: >-
          SELECT data.*
        Actions:
          - DynamoDBv2:
              PutItem:
                TableName: "ConnectedDevicesTable"
              RoleArn: !GetAtt DynamoDBTableRole.Arn
              
  StaticS3Site:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: PublicRead
      BucketName: ${self:custom.siteName}
      WebsiteConfiguration:
        IndexDocument: index.html
  
  StaticSiteS3BucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: StaticS3Site
      PolicyDocument:
        Statement:
          - Sid: PublicReadGetObject
            Effect: Allow
            Principal: "*"
            Action:
            - s3:GetObject
            Resource:
              Fn::Join: [
                "", [
                  "arn:aws:s3:::",
                  {
                    "Ref": "StaticS3Site"
                  },
                  "/*"
                ]
              ]